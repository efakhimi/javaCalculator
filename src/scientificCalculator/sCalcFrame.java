/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scientificCalculator;

import java.util.Enumeration;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.JOptionPane;

/**
 *
 * @author 100111010111001
 */
public class sCalcFrame extends javax.swing.JFrame {

    private static int base = 10;
    private static int mode = 0;
    private static String[] possibleNum = new String[]{"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"};

    /**
     * Creates new form sCalcFrame
     */
    public sCalcFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        baseOption = new javax.swing.ButtonGroup();
        modeOption = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mainTextBox = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rBase2 = new javax.swing.JRadioButton();
        rBase3 = new javax.swing.JRadioButton();
        rBase4 = new javax.swing.JRadioButton();
        rBase5 = new javax.swing.JRadioButton();
        rBase6 = new javax.swing.JRadioButton();
        rBase7 = new javax.swing.JRadioButton();
        rBase8 = new javax.swing.JRadioButton();
        rBase9 = new javax.swing.JRadioButton();
        rBase10 = new javax.swing.JRadioButton();
        rBase11 = new javax.swing.JRadioButton();
        rBase12 = new javax.swing.JRadioButton();
        rBase13 = new javax.swing.JRadioButton();
        rBase14 = new javax.swing.JRadioButton();
        rBase15 = new javax.swing.JRadioButton();
        rBase16 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        rMode1 = new javax.swing.JRadioButton();
        rMode2 = new javax.swing.JRadioButton();
        rMode3 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        mantissa = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btnN0 = new javax.swing.JButton();
        btnDecimal = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnN1 = new javax.swing.JButton();
        btnN3 = new javax.swing.JButton();
        btnN2 = new javax.swing.JButton();
        btnN4 = new javax.swing.JButton();
        btnN5 = new javax.swing.JButton();
        btnN6 = new javax.swing.JButton();
        btnN7 = new javax.swing.JButton();
        btnN8 = new javax.swing.JButton();
        btnN9 = new javax.swing.JButton();
        btnEquals = new javax.swing.JButton();
        btnDivide = new javax.swing.JButton();
        btnSubtract = new javax.swing.JButton();
        btnMultiple = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        btnSqrt = new javax.swing.JButton();
        btnPow3 = new javax.swing.JButton();
        btnPow2 = new javax.swing.JButton();
        btnSin = new javax.swing.JButton();
        btnCos = new javax.swing.JButton();
        btnTan = new javax.swing.JButton();
        btnCot = new javax.swing.JButton();
        btnArcSin = new javax.swing.JButton();
        btnArcCos = new javax.swing.JButton();
        btnArcTan = new javax.swing.JButton();
        btnArcCot = new javax.swing.JButton();
        btnLn = new javax.swing.JButton();
        btnLBracket = new javax.swing.JButton();
        btnRBracket = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        btnN10 = new javax.swing.JButton();
        btnN12 = new javax.swing.JButton();
        btnN11 = new javax.swing.JButton();
        btnN14 = new javax.swing.JButton();
        btnN13 = new javax.swing.JButton();
        btnN15 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Scientific Calculator");
        setMaximumSize(new java.awt.Dimension(900, 700));
        setMinimumSize(new java.awt.Dimension(603, 573));
        setPreferredSize(new java.awt.Dimension(650, 600));
        setSize(new java.awt.Dimension(650, 600));

        mainTextBox.setEditable(false);
        mainTextBox.setColumns(20);
        mainTextBox.setFont(new java.awt.Font("MS Reference Sans Serif", 0, 12)); // NOI18N
        mainTextBox.setRows(5);
        jScrollPane1.setViewportView(mainTextBox);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setText("Base :");

        baseOption.add(rBase2);
        rBase2.setText("2");
        rBase2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase2MouseClicked(evt);
            }
        });

        baseOption.add(rBase3);
        rBase3.setText("3");
        rBase3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase3MouseClicked(evt);
            }
        });

        baseOption.add(rBase4);
        rBase4.setText("4");
        rBase4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase4MouseClicked(evt);
            }
        });

        baseOption.add(rBase5);
        rBase5.setText("5");
        rBase5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase5MouseClicked(evt);
            }
        });

        baseOption.add(rBase6);
        rBase6.setText("6");
        rBase6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase6MouseClicked(evt);
            }
        });

        baseOption.add(rBase7);
        rBase7.setText("7");
        rBase7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase7MouseClicked(evt);
            }
        });

        baseOption.add(rBase8);
        rBase8.setText("8");
        rBase8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase8MouseClicked(evt);
            }
        });

        baseOption.add(rBase9);
        rBase9.setText("9");
        rBase9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase9MouseClicked(evt);
            }
        });

        baseOption.add(rBase10);
        rBase10.setSelected(true);
        rBase10.setText("10");
        rBase10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase10MouseClicked(evt);
            }
        });

        baseOption.add(rBase11);
        rBase11.setText("11");
        rBase11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase11MouseClicked(evt);
            }
        });

        baseOption.add(rBase12);
        rBase12.setText("12");
        rBase12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase12MouseClicked(evt);
            }
        });

        baseOption.add(rBase13);
        rBase13.setText("13");
        rBase13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase13MouseClicked(evt);
            }
        });

        baseOption.add(rBase14);
        rBase14.setText("14");
        rBase14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase14MouseClicked(evt);
            }
        });

        baseOption.add(rBase15);
        rBase15.setText("15");
        rBase15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase15MouseClicked(evt);
            }
        });

        baseOption.add(rBase16);
        rBase16.setText("16");
        rBase16.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rBase16MouseClicked(evt);
            }
        });

        jLabel2.setText("Mode :");

        modeOption.add(rMode1);
        rMode1.setSelected(true);
        rMode1.setText("Degree (Normal)");

        modeOption.add(rMode2);
        rMode2.setText("Radian");

        modeOption.add(rMode3);
        rMode3.setText("Gradian");

        jLabel3.setText("Mantissa :");

        mantissa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8" }));
        mantissa.setSelectedIndex(4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rBase16))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rMode1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rMode2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rMode3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mantissa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rBase2)
                    .addComponent(rBase3)
                    .addComponent(rBase4)
                    .addComponent(rBase5)
                    .addComponent(rBase6)
                    .addComponent(rBase7)
                    .addComponent(rBase8)
                    .addComponent(rBase9)
                    .addComponent(rBase10)
                    .addComponent(rBase11)
                    .addComponent(rBase12)
                    .addComponent(rBase13)
                    .addComponent(rBase14)
                    .addComponent(rBase15)
                    .addComponent(rBase16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(rMode1)
                    .addComponent(rMode2)
                    .addComponent(rMode3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(mantissa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnN0.setText("0");
        btnN0.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN0MouseClicked(evt);
            }
        });

        btnDecimal.setText(".");
        btnDecimal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDecimalMouseClicked(evt);
            }
        });

        btnDel.setText("<--");
        btnDel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDelMouseClicked(evt);
            }
        });

        btnN1.setText("1");
        btnN1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN1MouseClicked(evt);
            }
        });

        btnN3.setText("3");
        btnN3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN3MouseClicked(evt);
            }
        });

        btnN2.setText("2");
        btnN2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN2MouseClicked(evt);
            }
        });

        btnN4.setText("4");
        btnN4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN4MouseClicked(evt);
            }
        });

        btnN5.setText("5");
        btnN5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN5MouseClicked(evt);
            }
        });

        btnN6.setText("6");
        btnN6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN6MouseClicked(evt);
            }
        });

        btnN7.setText("7");
        btnN7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN7MouseClicked(evt);
            }
        });

        btnN8.setText("8");
        btnN8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN8MouseClicked(evt);
            }
        });

        btnN9.setText("9");
        btnN9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN9MouseClicked(evt);
            }
        });

        btnEquals.setText("=");
        btnEquals.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEqualsMouseClicked(evt);
            }
        });

        btnDivide.setText("/");
        btnDivide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDivideMouseClicked(evt);
            }
        });

        btnSubtract.setText("-");
        btnSubtract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSubtractMouseClicked(evt);
            }
        });

        btnMultiple.setText("*");
        btnMultiple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMultipleMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 192, Short.MAX_VALUE)
        );

        btnAdd.setText("+");
        btnAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAddMouseClicked(evt);
            }
        });

        btnSqrt.setText("Sqrt");
        btnSqrt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSqrtMouseClicked(evt);
            }
        });

        btnPow3.setText("Pow3");
        btnPow3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPow3MouseClicked(evt);
            }
        });

        btnPow2.setText("Pow2");
        btnPow2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnPow2MouseClicked(evt);
            }
        });

        btnSin.setText("Sin(x)");
        btnSin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSinMouseClicked(evt);
            }
        });

        btnCos.setText("Cos(x)");
        btnCos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCosMouseClicked(evt);
            }
        });

        btnTan.setText("Tan(x)");
        btnTan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTanMouseClicked(evt);
            }
        });

        btnCot.setText("Cot(x)");
        btnCot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCotMouseClicked(evt);
            }
        });

        btnArcSin.setText("aSin(x)");
        btnArcSin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArcSinMouseClicked(evt);
            }
        });

        btnArcCos.setText("aCos(x)");
        btnArcCos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArcCosMouseClicked(evt);
            }
        });

        btnArcTan.setText("aTan(x)");
        btnArcTan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArcTanMouseClicked(evt);
            }
        });

        btnArcCot.setText("aCot(x)");
        btnArcCot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnArcCotMouseClicked(evt);
            }
        });

        btnLn.setText("Ln(x)");
        btnLn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLnMouseClicked(evt);
            }
        });

        btnLBracket.setText("(");
        btnLBracket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLBracketMouseClicked(evt);
            }
        });

        btnRBracket.setText(")");
        btnRBracket.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRBracketMouseClicked(evt);
            }
        });

        btnClear.setText("CE");
        btnClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnTan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCot, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnPow3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLBracket, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRBracket, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnPow2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArcSin, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArcCos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArcTan, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnArcCot, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSqrt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSin, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCot, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPow2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArcSin, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArcCos, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArcTan, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnArcCot, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPow3, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLBracket, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRBracket, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btnN10.setText("A");
        btnN10.setEnabled(false);
        btnN10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN10MouseClicked(evt);
            }
        });

        btnN12.setText("C");
        btnN12.setEnabled(false);
        btnN12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN12MouseClicked(evt);
            }
        });

        btnN11.setText("B");
        btnN11.setEnabled(false);
        btnN11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN11MouseClicked(evt);
            }
        });

        btnN14.setText("E");
        btnN14.setEnabled(false);
        btnN14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN14MouseClicked(evt);
            }
        });

        btnN13.setText("D");
        btnN13.setEnabled(false);
        btnN13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN13MouseClicked(evt);
            }
        });

        btnN15.setText("F");
        btnN15.setEnabled(false);
        btnN15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnN15MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(btnN10, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnN11, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(btnN14, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnN15, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(btnN12, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnN13, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnN14, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnN15, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnN12, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnN13, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnN10, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnN11, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnN0, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDecimal, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDel, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnN1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnN2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(btnN4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnN5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnN6, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnN3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnN7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnN8, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnN9, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnMultiple, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSubtract, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEquals, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(btnDivide, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnDivide, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnMultiple, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSubtract, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnN8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnN7, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnN9, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnN5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnN6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnN4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnN1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnN2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnN3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnN0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnDecimal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(btnEquals, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(111, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnClearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClearMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText("");
    }//GEN-LAST:event_btnClearMouseClicked

    private void btnRBracketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRBracketMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + ")");
    }//GEN-LAST:event_btnRBracketMouseClicked

    private void btnLBracketMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLBracketMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "(");
    }//GEN-LAST:event_btnLBracketMouseClicked

    private void btnLnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLnMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "ln(");
    }//GEN-LAST:event_btnLnMouseClicked

    private void btnArcCotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArcCotMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "ArcCot(");
    }//GEN-LAST:event_btnArcCotMouseClicked

    private void btnArcTanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArcTanMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "ArcTan(");
    }//GEN-LAST:event_btnArcTanMouseClicked

    private void btnArcCosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArcCosMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "ArcCos(");
    }//GEN-LAST:event_btnArcCosMouseClicked

    private void btnArcSinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnArcSinMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "ArcSin(");
    }//GEN-LAST:event_btnArcSinMouseClicked

    private void btnCotMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCotMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Cot(");
    }//GEN-LAST:event_btnCotMouseClicked

    private void btnTanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTanMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Tan(");
    }//GEN-LAST:event_btnTanMouseClicked

    private void btnCosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCosMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Cos(");
    }//GEN-LAST:event_btnCosMouseClicked

    private void btnSinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSinMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Sin(");
    }//GEN-LAST:event_btnSinMouseClicked

    private void btnPow2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPow2MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Pow2(");
    }//GEN-LAST:event_btnPow2MouseClicked

    private void btnPow3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnPow3MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Pow3(");
    }//GEN-LAST:event_btnPow3MouseClicked

    private void btnSqrtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSqrtMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "Sqrt(");
    }//GEN-LAST:event_btnSqrtMouseClicked

    private void btnAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAddMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "+");
    }//GEN-LAST:event_btnAddMouseClicked

    private void btnMultipleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMultipleMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "*");
    }//GEN-LAST:event_btnMultipleMouseClicked

    private void btnSubtractMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSubtractMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "-");
    }//GEN-LAST:event_btnSubtractMouseClicked

    private void btnDivideMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDivideMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "/");
    }//GEN-LAST:event_btnDivideMouseClicked

    private void btnEqualsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEqualsMouseClicked
        // TODO add your handling code here:
        base = Integer.parseInt(getRadioButtonsValue(baseOption,""+10));
        String modeTemp = getRadioButtonsValue(modeOption, "Degree (Normal)");
        mode = modeTemp.equals("Degree (Normal)") ? 0 : (modeTemp.equals("Radian")? 2 : 1);
        String input = mainTextBox.getText();
        //input += "11+Sin(180/3)-5*8";
        //input += "12.1*10";
        //input += "65A45.3B5*9A";
        if(input.equals("")) input += "0";
        if (inputFormatValidator(input.toLowerCase())) {
            String[] elms = input.split("([()])+");

            for (int i = 0; i < elms.length; i++) {
                elms[i] = (i % 2 == 1 ? "" + doTheMath(elms[i]) : elms[i]);
            }
            String temp = "";
            for (int i = 0; i < elms.length; i++) {
                temp += elms[i] + (i < elms.length - 1 ? (i % 2 == 0) ? "(" : ")" : "");
            }
            //System.out.println("here : "+temp);

            //mainTextBox.setText(temp);
            //Calculate the math function first
            int idx = 0, length = 0, begin = 0;
            String temp2 = "";
            int[] indexesSin = findFunctions(temp.toLowerCase(), "sin");
            for (int i = 0; i < indexesSin.length && indexesSin[i] > 0; i++) {
                length = indexesSin[i] % 1000;
                idx = indexesSin[i] / 1000;

                temp2 += temp.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.sin(convertAngle(Double.parseDouble(convertBaseFromNToTen(temp.substring(begin+4, begin + 4 + length), base)), mode));
                temp2 += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 5;
            }
            if (begin == 0) {
                temp2 += temp;
            } else {
                temp2 += temp.substring(begin);
            }
            begin = 0;
            temp ="";

            int[] indexesCos = findFunctions(temp2.toLowerCase(), "cos");
            for (int i = 0; i < indexesCos.length && indexesCos[i] > 0; i++) {
                length = indexesCos[i] % 1000;
                idx = indexesCos[i] / 1000;

                temp += temp2.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.cos(convertAngle(Double.parseDouble(convertBaseFromNToTen(temp2.substring(begin+4, begin + 4 + length), base)), mode));
                temp += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 5;
            }
            if (begin == 0) {
                temp += temp2;
            } else {
                temp += temp2.substring(begin);
            }
            begin = 0;
            temp2 = "";
            int[] indexesTan = findFunctions(temp.toLowerCase(), "tan");
            for (int i = 0; i < indexesTan.length && indexesTan[i] > 0; i++) {
                length = indexesTan[i] % 1000;
                idx = indexesTan[i] / 1000;

                temp2 += temp.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.tan(convertAngle(Double.parseDouble(convertBaseFromNToTen(temp.substring(begin+4, begin + 4 + length), base)), mode));
                temp2 += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 5;
            }
            if (begin == 0) {
                temp2 += temp;
            } else {
                temp2 += temp.substring(begin);
            }
            begin = 0;
            temp ="";

            int[] indexesCot = findFunctions(temp2.toLowerCase(), "cot");
            for (int i = 0; i < indexesCot.length && indexesCot[i] > 0; i++) {
                length = indexesCot[i] % 1000;
                idx = indexesCot[i] / 1000;

                temp += temp2.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= 1/Math.tan(convertAngle(Double.parseDouble(convertBaseFromNToTen(temp2.substring(begin+4, begin + 4 + length), base)), mode));
                temp += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 5;
            }
            if (begin == 0) {
                temp += temp2;
            } else {
                temp += temp2.substring(begin);
            }
            begin = 0;
            temp2 = "";
            int[] indexesAsin = findFunctions(temp.toLowerCase(), "asin");
            for (int i = 0; i < indexesAsin.length && indexesAsin[i] > 0; i++) {
                length = indexesAsin[i] % 1000;
                idx = indexesAsin[i] / 1000;

                temp2 += temp.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.asin(Double.parseDouble(convertBaseFromNToTen(temp.substring(begin+5, begin + 5 + length), base)));
                temp2 += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp2 += temp;
            } else {
                temp2 += temp.substring(begin);
            }
            begin = 0;
            temp ="";

            int[] indexesAcos = findFunctions(temp2.toLowerCase(), "acos");
            for (int i = 0; i < indexesAcos.length && indexesAcos[i] > 0; i++) {
                length = indexesAcos[i] % 1000;
                idx = indexesAcos[i] / 1000;

                temp += temp2.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.acos(Double.parseDouble(convertBaseFromNToTen(temp2.substring(begin+5, begin + 5 + length), base)));
                temp += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp += temp2;
            } else {
                temp += temp2.substring(begin);
            }
            begin = 0;
            temp2 = "";
            int[] indexesAcan = findFunctions(temp.toLowerCase(), "atan");
            for (int i = 0; i < indexesTan.length && indexesTan[i] > 0; i++) {
                length = indexesTan[i] % 1000;
                idx = indexesTan[i] / 1000;

                temp2 += temp.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.atan(Double.parseDouble(convertBaseFromNToTen(temp.substring(begin+5, begin + 5 + length), base)));
                temp2 += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp2 += temp;
            } else {
                temp2 += temp.substring(begin);
            }
            begin = 0;
            temp ="";

            int[] indexesAcot = findFunctions(temp2.toLowerCase(), "acot");
            for (int i = 0; i < indexesAcot.length && indexesAcot[i] > 0; i++) {
                length = indexesAcot[i] % 1000;
                idx = indexesAcot[i] / 1000;

                temp += temp2.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= (Math.PI/2) - Math.atan(Double.parseDouble(convertBaseFromNToTen(temp2.substring(begin+5, begin + 5 + length), base)));
                temp += convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp += temp2;
            } else {
                temp += temp2.substring(begin);
            }

            begin = 0;
            temp2 = "";
            int[] indexesPow2 = findFunctions(temp.toLowerCase(), "pow2");
            for (int i = 0; i < indexesPow2.length && indexesPow2[i] > 0; i++) {
                length = indexesPow2[i] % 1000;
                idx = indexesPow2[i] / 1000;

                temp2 += temp.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.pow(Double.parseDouble(convertBaseFromNToTen(temp.substring(begin+5, begin + 5 + length), base)), 2);
                temp2 += convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp2 += temp;
            } else {
                temp2 += temp.substring(begin);
            }
            begin = 0;
            temp ="";

            int[] indexesPow3 = findFunctions(temp2.toLowerCase(), "pow3");
            for (int i = 0; i < indexesPow3.length && indexesPow3[i] > 0; i++) {
                length = indexesPow3[i] % 1000;
                idx = indexesPow3[i] / 1000;

                temp += temp2.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.pow(Double.parseDouble(convertBaseFromNToTen(temp2.substring(begin+5, begin + 5 + length), base)), 3);
                temp2 += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp += temp2;
            } else {
                temp += temp2.substring(begin);
            }

            begin = 0;
            temp2 = "";
            int[] indexesSqrt = findFunctions(temp.toLowerCase(), "sqrt");
            for (int i = 0; i < indexesSqrt.length && indexesSqrt[i] > 0; i++) {
                length = indexesSqrt[i] % 1000;
                idx = indexesSqrt[i] / 1000;

                temp2 += temp.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t= Math.sqrt(Double.parseDouble(convertBaseFromNToTen(temp.substring(begin+5, begin + 5 + length), base)));
                temp2 += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 6;
            }
            if (begin == 0) {
                temp2 += temp;
            } else {
                temp2 += temp.substring(begin);
            }
            begin = 0;
            temp ="";

            int[] indexesLn = findFunctions(temp2.toLowerCase(), "ln");
            for (int i = 0; i < indexesLn.length && indexesLn[i] > 0; i++) {
                length = indexesLn[i] % 1000;
                idx = indexesLn[i] / 1000;

                temp += temp2.substring(begin, idx);
                begin = begin == 0 ? idx : begin;
                double t = Math.log(Double.parseDouble(convertBaseFromNToTen(temp2.substring(begin+3, begin + 3 + length), base)));
                temp += t<0 ? 0+""+ convertBaseFromTenToN(""+t, base) : convertBaseFromTenToN(""+t, base);

                begin = idx + length + 4;
            }
            if (begin == 0) {
                temp += temp2;
            } else {
                temp += temp2.substring(begin);
            }
            //System.out.println(temp);
            //calculate the major operations
            String result = doTheMath(temp);
            int endMant = result.indexOf(".")+mantissa.getSelectedIndex()+1;
            endMant = endMant <= result.length() ? endMant : result.length();
            mainTextBox.setText(result.indexOf(".")==-1 ? result : (mantissa.getSelectedIndex() != 0 ? result.substring(0, endMant) : result.substring(0, result.indexOf("."))));

        } else {
            JOptionPane.showMessageDialog(this, "Your requested string can not be calculatedm because of non-standard format.\nStandard format : 1.7+2*(3/2)-Sin(30)*Pow3(2)", "Wrong Format", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnEqualsMouseClicked

    private void btnN9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN9MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "9");
    }//GEN-LAST:event_btnN9MouseClicked

    private void btnN8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN8MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "8");
    }//GEN-LAST:event_btnN8MouseClicked

    private void btnN7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN7MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "7");
    }//GEN-LAST:event_btnN7MouseClicked

    private void btnN6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN6MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "6");
    }//GEN-LAST:event_btnN6MouseClicked

    private void btnN5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN5MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "5");
    }//GEN-LAST:event_btnN5MouseClicked

    private void btnN4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN4MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "4");
    }//GEN-LAST:event_btnN4MouseClicked

    private void btnN2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN2MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "2");
    }//GEN-LAST:event_btnN2MouseClicked

    private void btnN3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN3MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "3");
    }//GEN-LAST:event_btnN3MouseClicked

    private void btnN1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN1MouseClicked
        mainTextBox.setText(mainTextBox.getText() + "1");
    }//GEN-LAST:event_btnN1MouseClicked

    private void btnDelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDelMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText().substring(0, mainTextBox.getText().length() - 1));
    }//GEN-LAST:event_btnDelMouseClicked

    private void btnDecimalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDecimalMouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + ".");
    }//GEN-LAST:event_btnDecimalMouseClicked

    private void btnN0MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN0MouseClicked
        // TODO add your handling code here:
        mainTextBox.setText(mainTextBox.getText() + "0");
    }//GEN-LAST:event_btnN0MouseClicked

    private void rBase11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase11MouseClicked
        // TODO add your handling code here:
        base = 11;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(true);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase11MouseClicked

    private void rBase12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase12MouseClicked
        // TODO add your handling code here:
        base =12;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(true);
        btnN11.setEnabled(true);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase12MouseClicked

    private void rBase13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase13MouseClicked
        // TODO add your handling code here:
        base=13;
        
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(true);
        btnN11.setEnabled(true);
        btnN12.setEnabled(true);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase13MouseClicked

    private void rBase14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase14MouseClicked
        // TODO add your handling code here:
        base=14;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(true);
        btnN11.setEnabled(true);
        btnN12.setEnabled(true);
        btnN13.setEnabled(true);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase14MouseClicked

    private void rBase15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase15MouseClicked
        // TODO add your handling code here:
        base=15;
        
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(true);
        btnN11.setEnabled(true);
        btnN12.setEnabled(true);
        btnN13.setEnabled(true);
        btnN14.setEnabled(true);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase15MouseClicked

    private void rBase16MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase16MouseClicked
        // TODO add your handling code here:
        base=16;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(true);
        btnN11.setEnabled(true);
        btnN12.setEnabled(true);
        btnN13.setEnabled(true);
        btnN14.setEnabled(true);
        btnN15.setEnabled(true);
    }//GEN-LAST:event_rBase16MouseClicked

    private void rBase9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase9MouseClicked
        // TODO add your handling code here:
        base=9;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase9MouseClicked

    private void rBase10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase10MouseClicked
        // TODO add your handling code here:
        base=10;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(true);
        btnN9.setEnabled(true);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase10MouseClicked

    private void rBase8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase8MouseClicked
        // TODO add your handling code here:
        base=8;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(true);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase8MouseClicked

    private void rBase7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase7MouseClicked
        // TODO add your handling code here:
        base=7;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(true);
        btnN7.setEnabled(false);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase7MouseClicked

    private void rBase6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase6MouseClicked
        // TODO add your handling code here:
        base=6;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(true);
        btnN6.setEnabled(false);
        btnN7.setEnabled(false);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase6MouseClicked

    private void rBase5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase5MouseClicked
        // TODO add your handling code here:
        base=5;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(true);
        btnN5.setEnabled(false);
        btnN6.setEnabled(false);
        btnN7.setEnabled(false);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase5MouseClicked

    private void rBase4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase4MouseClicked
        // TODO add your handling code here:
        base=4;
        btnN2.setEnabled(true);
        btnN3.setEnabled(true);
        btnN4.setEnabled(false);
        btnN5.setEnabled(false);
        btnN6.setEnabled(false);
        btnN7.setEnabled(false);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase4MouseClicked

    private void rBase3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase3MouseClicked
        // TODO add your handling code here:
        base=3;
        btnN2.setEnabled(true);
        btnN3.setEnabled(false);
        btnN4.setEnabled(false);
        btnN5.setEnabled(false);
        btnN6.setEnabled(false);
        btnN7.setEnabled(false);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase3MouseClicked

    private void rBase2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rBase2MouseClicked
        // TODO add your handling code here:
        base=2;
        btnN2.setEnabled(false);
        btnN3.setEnabled(false);
        btnN4.setEnabled(false);
        btnN5.setEnabled(false);
        btnN6.setEnabled(false);
        btnN7.setEnabled(false);
        btnN8.setEnabled(false);
        btnN9.setEnabled(false);
        btnN10.setEnabled(false);
        btnN11.setEnabled(false);
        btnN12.setEnabled(false);
        btnN13.setEnabled(false);
        btnN14.setEnabled(false);
        btnN15.setEnabled(false);
    }//GEN-LAST:event_rBase2MouseClicked

    private void btnN10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN10MouseClicked
        // TODO add your handling code here:                                  
        mainTextBox.setText(mainTextBox.getText() + "A");
    }//GEN-LAST:event_btnN10MouseClicked

    private void btnN11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN11MouseClicked
        // TODO add your handling code here:          
        mainTextBox.setText(mainTextBox.getText() + "B");
    }//GEN-LAST:event_btnN11MouseClicked

    private void btnN12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN12MouseClicked
        // TODO add your handling code here:          
        mainTextBox.setText(mainTextBox.getText() + "C");
    }//GEN-LAST:event_btnN12MouseClicked

    private void btnN13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN13MouseClicked
        // TODO add your handling code here:          
        mainTextBox.setText(mainTextBox.getText() + "D");
    }//GEN-LAST:event_btnN13MouseClicked

    private void btnN14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN14MouseClicked
        // TODO add your handling code here:          
        mainTextBox.setText(mainTextBox.getText() + "E");
    }//GEN-LAST:event_btnN14MouseClicked

    private void btnN15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnN15MouseClicked
        // TODO add your handling code here:          
        mainTextBox.setText(mainTextBox.getText() + "F");
    }//GEN-LAST:event_btnN15MouseClicked

    private static String convertBaseFromNToTen(String nm, int b) {

        double a = 1;
        double res = 0;
        System.out.println(nm);

        if(b == 10) return nm;
        
        String LeftP = "", RightP = "";

        if (nm.indexOf('.') != -1) {
            String[] num = nm.split("\\.");

            LeftP = num[0];
            RightP = num[1];
        } else {
            LeftP = nm;
        }

        for (int i = LeftP.length(); i > 0; i--) {
            res += a * findArrayKey("" + LeftP.charAt(i - 1), possibleNum);
            a *= b;
        }

        double temp = (double) b;
        a = 1 / temp;
        for (int i = 0; i < RightP.length(); i++) {
            res += a * findArrayKey("" + RightP.charAt(i), possibleNum);
            a /= temp;
        }
        return res+"";
    }

    private static String convertBaseFromTenToN(String inp, int n) {
        if(n == 10) return inp;
        String res = "";
        int a = (int) Double.parseDouble(inp);
        while (a > 0) {
            res = possibleNum[(a % n)] + res;
            a /= n;
        }

        if(res.equals(""))
            res += "0";
        String resFloating = "";
        double f = Double.parseDouble(inp);
        f -= (int) f;
        for (int i = 0; i < 9 || f <= 0; i++) {
            resFloating += possibleNum[(int) (f * n)];
            f = f * n;
            f -= (int) f;
        }
        if (!resFloating.equals("")) {
            res += "." + resFloating;
        }

        return res;
    }

    public static double convertAngle(double a, int mode) {
        double res=0.0;

        switch (mode) {
            case 0:
                if (a > 360) {
                    a %= 360;
                }
                res = a * Math.PI / 180;
                break;
            case 1:
                if (a > 400) {
                    a %= 400;
                }
                res = a * Math.PI / 200;
                break;
            case 2:
                res = a;
                break;
        }
        return res;
    }

    private static int[] findFunctions(String hayStack, String needle) {
        int[] index = new int[25];
        if (hayStack.contains(needle)) {
            int i = 0, place, length;
            int idx = 0;
            length = needle.length();
            while (hayStack.indexOf(needle, i) >= 0) {
                place = hayStack.indexOf(needle, i);

                index[idx] += place * 1000;//start index
                index[idx] += hayStack.indexOf(")", i + length + 2) - place - (length + 1);//length

                idx++;
                i = place + length + 1;
            }
        }

        return index;
    }

    private static String doTheMath(String s) {
        System.out.println(s);
        String[] numbers = s.split("([-+/*])+");
        String regex = regexCreator(base);
        String[] Operators = s.split(regex);

        // Operators priority : * > / > - > +
        // * 
        for (int i = 1; i < Operators.length; i++) {
            if (Operators[i].equals("")) {
                break;
            }
            if (Operators[i].equals("*")) {
                if(numbers[i - 1].indexOf("-")==0 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = "-" +operatorMultiple(numbers[i - 1].substring(1), numbers[i]);
                else if(numbers[i].indexOf("-")==0 && numbers[i-1].indexOf("-")==-1)
                    numbers[i - 1] = "-" +operatorMultiple(numbers[i - 1], numbers[i].substring(1));
                else if(numbers[i - 1].indexOf("-")==-1 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = operatorMultiple(numbers[i - 1], numbers[i]);
                else
                    numbers[i - 1] = operatorMultiple(numbers[i - 1].substring(1), numbers[i].substring(1));
                //numbers[i - 1] = operatorMultiple(numbers[i - 1], numbers[i]);
                for (int j = i; j < numbers.length - 1; j++) {
                    numbers[j] = numbers[j + 1];
                }
                numbers[numbers.length - 1] = "0";
                for (int j = i; j < Operators.length - 1; j++) {
                    Operators[j] = Operators[j + 1];
                }
                Operators[Operators.length - 1] = "";
                i--;
            }
        }

        // /
        for (int i = 1; i < Operators.length; i++) {
            if (Operators[i].equals("")) {
                break;
            }
            if (Operators[i].equals("/")) {
                //System.out.println(numbers[i-1]);
                //System.out.println(numbers[i]);
                if(numbers[i - 1].indexOf("-")==0 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = "-" +operatorDivide(numbers[i - 1].substring(1), numbers[i]);
                else if(numbers[i].indexOf("-")==0 && numbers[i-1].indexOf("-")==-1)
                    numbers[i - 1] = "-" +operatorDivide(numbers[i - 1], numbers[i].substring(1));
                else if(numbers[i - 1].indexOf("-")==-1 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = operatorDivide(numbers[i - 1], numbers[i]);
                else
                    numbers[i - 1] = operatorDivide(numbers[i - 1].substring(1), numbers[i].substring(1));
                
                //System.out.println(numbers[i-1]);
                //numbers[i - 1] =  operatorDivide(numbers[i - 1], numbers[i]);
                for (int j = i; j < numbers.length - 1; j++) {
                    numbers[j] = numbers[j + 1];
                }
                numbers[numbers.length - 1] = "0";
                for (int j = i; j < Operators.length - 1; j++) {
                    Operators[j] = Operators[j + 1];
                }
                Operators[Operators.length - 1] = "";
                i--;
            }
        }

        // -
        for (int i = 1; i < Operators.length; i++) {
            if (Operators[i].equals("")) {
                break;
            }
            if (Operators[i].equals("-")) {
                //System.out.println(i + " -");
                //System.out.println(numbers[i - 1]);
                //System.out.println(numbers[i]);
                if(numbers[i - 1].indexOf("-")==0 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = operatorAdd(numbers[i - 1].substring(1), numbers[i]);
                else if(numbers[i].indexOf("-")==0 && numbers[i-1].indexOf("-")==-1)
                    numbers[i - 1] = operatorAdd(numbers[i - 1], numbers[i].substring(1));
                else if(numbers[i - 1].indexOf("-")==-1 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = operatorSubtract(numbers[i - 1], numbers[i]);
                else
                    numbers[i - 1] = "-"+operatorAdd(numbers[i - 1].substring(1), numbers[i].substring(1));
                
                //System.out.println(i + " - - ");
                for (int j = i; j < numbers.length - 1; j++) {
                    numbers[j] = numbers[j + 1];
                }
                numbers[numbers.length - 1] = "0";
                for (int j = i; j < Operators.length - 1; j++) {
                    Operators[j] = Operators[j + 1];
                }
                Operators[Operators.length - 1] = "";
                i--;
            }
        }

        // +
        for (int i = 1; i < Operators.length; i++) {
            if (Operators[i].equals("")) {
                break;
            }
            if (Operators[i].equals("+")) {
                //System.out.println(i + " + ");
                //System.out.println(numbers[i - 1]);
                //System.out.println(numbers[i]);
                if(numbers[i - 1].indexOf("-")==0 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = operatorSubtract(numbers[i - 1].substring(1), numbers[i]);
                else if(numbers[i].indexOf("-")==0 && numbers[i-1].indexOf("-")==-1)
                    numbers[i - 1] = operatorSubtract(numbers[i - 1], numbers[i].substring(1));
                else if(numbers[i - 1].indexOf("-")==-1 && numbers[i].indexOf("-")==-1)
                    numbers[i - 1] = operatorAdd(numbers[i - 1], numbers[i]);
                else
                    numbers[i - 1] = "-"+operatorSubtract(numbers[i - 1].substring(1), numbers[i].substring(1));
                
                
                for (int j = i; j < numbers.length - 1; j++) {
                    numbers[j] = numbers[j + 1];
                }
                numbers[numbers.length - 1] = "0";
                for (int j = i; j < Operators.length - 1; j++) {
                    Operators[j] = Operators[j + 1];
                }
                Operators[Operators.length - 1] = "";
                i--;
            }
        }

        return numbers[0];
    }

    private static String[] numberNormalizer(String a, String b) {
        String[] aParts = a.split("[.]");
        String[] bParts = b.split("[.]");

        int length = Math.abs(aParts[0].length() - bParts[0].length());
        if (aParts[0].length() != bParts[0].length()) {
            if (aParts[0].length() > bParts[0].length()) {
                for (int i = 0; i < length; i++) {
                    bParts[0] = "0" + bParts[0];
                }
            } else {
                for (int i = 0; i < length; i++) {
                    aParts[0] = "0" + aParts[0];
                }

            }
        }
//System.out.println("aParts[0]" + aParts[0]);
//System.out.println("bParts[0]" + bParts[0]);
        String newA = "", newB = "";

        if (aParts.length == bParts.length) {
            if (aParts.length == 1) {
                newA += aParts[0];
                newB += bParts[0];
            } else {
                length = Math.abs(aParts[1].length() - bParts[1].length());
                if (aParts[1].length() != bParts[1].length()) {
                    if (aParts[1].length() > bParts[1].length()) {
                        for (int i = 0; i < length; i++) {
                            bParts[1] += "0";
                        }
                    } else {
                        for (int i = 0; i < length; i++) {
                            aParts[1] += "0";
                        }

                    }
                }
                newA += aParts[0] + "." + aParts[1];
                newB += bParts[0] + "." + bParts[1];
            }
        } else {
            if (aParts.length > bParts.length) {
                newA += aParts[0] + "." + aParts[1];
                newB += bParts[0] + ".";
                for (int i = 0; i < aParts[1].length(); i++) {
                    newB += "0";
                }
            } else {
                newA += aParts[0] + ".";
                newB += bParts[0] + "." + bParts[1];
                for (int i = 0; i < bParts[1].length(); i++) {
                    newA += "0";
                }

            }
        }
        String[] res = {newA, newB};
        return res;
    }

    private static String operatorAdd(String a, String b) {
        String res = "";

        String[] t = numberNormalizer(a, b);
        String newA = t[0];
        String newB = t[1];
//System.out.println(newA);
//System.out.println(newB);
        int temp = 0;
        for (int i = newA.length() - 1; i >= 0; i--) {
            if (newA.charAt(i) == '.') {

                res = "." + res;
                continue;
            }
            int r;
            int na = findArrayKey("" + newA.charAt(i), possibleNum);
            int nb = findArrayKey("" + newB.charAt(i), possibleNum);
            r = na + nb + temp;
            res = (possibleNum[(r % base)]) + res;
            temp = r / base;
        }
        if (temp > 0) {
            res = (possibleNum[temp]) + res;
        }

        return res;
    }

    private static String operatorSubtract(String a, String b) {
        String res = "";

        //System.out.println("a : " + a);
        //System.out.println("b : " + b);
        //System.out.println();
        //System.out.println();
        String[] t = numberNormalizer(a, b);
        String newA = t[0];
        String newB = compelmentCalculator(t[1], true);
        //System.out.println("A : " + newA);
        //System.out.println("B : " + newB);
        String temp = operatorAdd(newA, newB);
        return (temp.length() <= newA.length() ? "-" + ommitUselessZeros(compelmentCalculator(temp, true)) : ommitUselessZeros(temp.substring(1)));
    }

    private static String operatorMultiple(String a, String b) {
        String res1 = "0", res2 = "";

        for (int i = b.length() - 1; i >= 0; i--) {

            if (b.charAt(i) == '.') {
                continue;
            }
            //System.out.println(res1);
            res2 = "";
            for (int j = b.length() - 1 - i; j > 0; j--) {
                res2 += "0";
            }
            //System.out.println(res2);

            int temp = 0, t;
            boolean percisionDetected = false;
            int nb = findArrayKey("" + b.charAt(i), possibleNum);

            for (int j = a.length() - 1; j >= 0; j--) {
                if (a.charAt(j) == '.') {
                    percisionDetected = true;
                    res2 = "." + res2;
                    continue;
                }
                int na = findArrayKey("" + a.charAt(j), possibleNum);

                t = (na * nb) + temp;
                //System.out.println("res22 : "+res2);
                res2 = possibleNum[(t % base)] + res2;
                temp = t / base;
            }
            if (temp > 0) {
                res2 = temp + res2;
            }

            System.out.println("res22 : "+res2);
            if (percisionDetected) {
                String tmp = "";
                int tp = res2.indexOf(".");
                int tp2 = b.length() - i - 1;
                if(tp2 > 0)
                {
                    System.out.println("1 : "+tp + " : "+tp2);
                    tmp += res2.substring(0, tp);
                    tmp += res2.substring(tp+1, tp +tp2+1);
                    tmp += ".";
                    tmp += res2.substring(tp+tp2+1);
                }
                else tmp += res2;
                
                res2 = i < b.length() ? tmp : res2;
            }

            //System.out.println("1 : "+res1);
            //System.out.println("2 : "+res2);
            res1 = operatorAdd(res1, res2);
            //System.out.println("res1 : "+res1);
        }

        return res1;
    }

    private static String operatorDivide(String a, String b) {
        String res = "", str = "";

        int percision = 0, i = 0, length = 0, gap = 0;
        boolean decPoint = false;

        length = b.length();
        str = a.substring(i, length);
        i = length - 1;

        //System.out.println("a : "+ a);
        //System.out.println("b : "+ b);
        while (i < a.length() && percision < 6) {
            //System.out.println("Begin of loop res : "+ res);
            //System.out.println("Begin of loop : "+ str);
            //System.out.println(i);
            int conquer = 0;
            while (aGreaterThanBOrEqual(str, b) && !str.equals("00")) {
                conquer++;
                str = operatorSubtract(str, b);
                if (decPoint) {
                    percision++;
                }
            }

            //System.out.println("after while loop : "+ conquer);
            //System.out.println("after while loop : "+ str);
            res += possibleNum[conquer];
            //System.out.println("after while loop res : "+ res);
            if (i < a.length() - 2 && a.charAt(i + 1) == '.' && !decPoint) {
                decPoint = true;
                res += '.';
                i++;
            }
            i++;

            if (i < a.length()) {
                str += a.substring(i, i + 1);
            }
            //System.out.println("after while if : "+ i);
            //System.out.println("after while if : "+ str);
        }

        //System.out.println("res : " + res);
        return res;
    }

    private static String ommitUselessZeros(String s) {
        String res = "";
        boolean noneZero = false;
        for (int i = 0; i < s.length(); i++) {
            if (!noneZero) {
                if (s.charAt(i) == '0') {
                    if (i + 1 < s.length() && s.charAt(i + 1) != '.') {
                        continue;
                    }
                }

                noneZero = true;
            }
            res += s.charAt(i);

        }
        return res;
    }

    private static boolean aGreaterThanBOrEqual(String a, String b) {
        //System.out.println("");
        //System.out.println("AGTB");
        //System.out.println("a : " + a);
        //System.out.println("b : " + b);
        //System.out.println("");
        //System.out.println("");
        if (a.length() < b.length()) {
            return false;
        }
        if (a.length() > b.length()) {
            return true;
        }
        if (a.equals(b)) {
            return true;
        }
        for (int i = 0; i < a.length(); i++) {
            if (a.charAt(i) < b.charAt(i)) {
                return false;
            }
        }
        return true;
    }

    private static String compelmentCalculator(String n, boolean rComp) {
        String res = "";
        int temp = rComp ? 1 : 0;//mode 0 => complement of r-1 and mode =>1 complement if r
        int t;

        for (int i = n.length() - 1; i >= 0; i--) {
            if (n.charAt(i) == '.') {
                res = "." + res;
                continue;
            }
            t = base - findArrayKey("" + n.charAt(i), possibleNum) + temp - 1;

            res = possibleNum[(t % base)] + res;
            temp = t / base;
        }

        if (temp > 0) {
            res = possibleNum[temp] + res;
        }

        return res;
    }

    private static int findArrayKey(String needle, String[] hayStack) {
        int i;
        for (i = 0; i < hayStack.length; i++) {
            if (hayStack[i].equals(needle)) {
                break;
            }
        }

        return (hayStack.length == i ? -1 : i);
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sCalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sCalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sCalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sCalcFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sCalcFrame().setVisible(true);
            }
        });
    }

    private static boolean inputFormatValidator(String s) {
        int a = 0;

        if (s.charAt(a) == '.' || s.charAt(a) == ')' || s.charAt(a) == '+' || s.charAt(a) == '-' || s.charAt(a) == '*' || s.charAt(a) == '/') {
            return false;
        }
        for (int i = 0; i < s.length(); i++) {
            boolean noneNumeric = true;
            if (i < s.length() - 1) {
                if (s.charAt(i) == '+' || s.charAt(i) == '-' || s.charAt(i) == '*' || s.charAt(i) == '/') {
                    continue;
                }
            }
//            if()
            if (s.charAt(i) == 'a' || s.charAt(i) == 'b' || s.charAt(i) == 'c' || s.charAt(i) == 'd' || s.charAt(i) == 'e' || s.charAt(i) == 'f') {
                //System.out.println("1");
                if(findArrayKey((""+s.charAt(i)).toUpperCase(), possibleNum) >= base)
                    return false;
                noneNumeric = false;
                //System.out.println("1");
            }
            if (noneNumeric && (s.charAt(i) == 's' || s.charAt(i) == 'c' || s.charAt(i) == 'a' || s.charAt(i) == 't' || s.charAt(i) == 'l' || s.charAt(i) == 'p')) {
                if (s.substring(i, i + 2).equals("ln")) {
                    i += 2;
                    continue;
                }
                if (s.substring(i, i + 3).equals("sin") || s.substring(i, i + 3).equals("cos") || s.substring(i, i + 3).equals("tan") || s.substring(i, i + 3).equals("cot")) {
                    i += 3;
                    continue;
                }
                if (s.substring(i, i + 4).equals("asin") || s.substring(i, i + 4).equals("acos")
                        || s.substring(i, i + 4).equals("atan") || s.substring(i, i + 4).equals("acot")
                        || s.substring(i, i + 4).equals("pow2") || s.substring(i, i + 4).equals("pow3")) {
                    i += 4;
                    continue;
                }
            }
            if (s.charAt(i) == '.' || s.charAt(i) == ')') {
                if (!validNumberInBase(s.charAt(i - 1) + "", base)) {
                    //System.out.println(i + " : " + s.charAt(i - 1));
                    return false;
                }
            } else if (!(s.charAt(i) == '.' || s.charAt(i) == '(') && !validNumberInBase((s.charAt(i) + "").toUpperCase(), base)) {
                return false;
            }

        }
        a = s.length() - 1;
        if (s.charAt(a) == '.' || s.charAt(a) == '(' || s.charAt(a) == '+' || s.charAt(a) == '-' || s.charAt(a) == '*' || s.charAt(a) == '/') {
            return false;
        }

        return true;
    }

    private static String regexCreator(int b) {

        String regexBody = "[0-";
        if (b <= 10) {
            regexBody += (b - 1) + "]";
        } else {
            regexBody += "9";
            if (b == 11) {
                regexBody += "A]";
            } else {
                regexBody += "A-" + possibleNum[b - 1] + "]";
            }
        }

        regexBody = "" + regexBody + "+(\\." + regexBody + "*)?";

        return regexBody;
    }

    private static boolean validNumberInBase(String number, int b) {

        String regexBody = regexCreator(b);
        Pattern pat = Pattern.compile(regexBody);
        Matcher m = pat.matcher(number);

        if (m.matches()) {
            return true;
        }

        return false;
    }

    private static String getRadioButtonsValue(javax.swing.ButtonGroup bs, String defaultValue) {
        String b = "";//defaultValue;
        for (Enumeration<AbstractButton> buttons = bs.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                b = (button.getText());
            }
        }
        if(b.equals(""))
            b += defaultValue;
        return b;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup baseOption;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnArcCos;
    private javax.swing.JButton btnArcCot;
    private javax.swing.JButton btnArcSin;
    private javax.swing.JButton btnArcTan;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnCos;
    private javax.swing.JButton btnCot;
    private javax.swing.JButton btnDecimal;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnDivide;
    private javax.swing.JButton btnEquals;
    private javax.swing.JButton btnLBracket;
    private javax.swing.JButton btnLn;
    private javax.swing.JButton btnMultiple;
    private javax.swing.JButton btnN0;
    private javax.swing.JButton btnN1;
    private javax.swing.JButton btnN10;
    private javax.swing.JButton btnN11;
    private javax.swing.JButton btnN12;
    private javax.swing.JButton btnN13;
    private javax.swing.JButton btnN14;
    private javax.swing.JButton btnN15;
    private javax.swing.JButton btnN2;
    private javax.swing.JButton btnN3;
    private javax.swing.JButton btnN4;
    private javax.swing.JButton btnN5;
    private javax.swing.JButton btnN6;
    private javax.swing.JButton btnN7;
    private javax.swing.JButton btnN8;
    private javax.swing.JButton btnN9;
    private javax.swing.JButton btnPow2;
    private javax.swing.JButton btnPow3;
    private javax.swing.JButton btnRBracket;
    private javax.swing.JButton btnSin;
    private javax.swing.JButton btnSqrt;
    private javax.swing.JButton btnSubtract;
    private javax.swing.JButton btnTan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea mainTextBox;
    private javax.swing.JComboBox<String> mantissa;
    private javax.swing.ButtonGroup modeOption;
    private javax.swing.JRadioButton rBase10;
    private javax.swing.JRadioButton rBase11;
    private javax.swing.JRadioButton rBase12;
    private javax.swing.JRadioButton rBase13;
    private javax.swing.JRadioButton rBase14;
    private javax.swing.JRadioButton rBase15;
    private javax.swing.JRadioButton rBase16;
    private javax.swing.JRadioButton rBase2;
    private javax.swing.JRadioButton rBase3;
    private javax.swing.JRadioButton rBase4;
    private javax.swing.JRadioButton rBase5;
    private javax.swing.JRadioButton rBase6;
    private javax.swing.JRadioButton rBase7;
    private javax.swing.JRadioButton rBase8;
    private javax.swing.JRadioButton rBase9;
    private javax.swing.JRadioButton rMode1;
    private javax.swing.JRadioButton rMode2;
    private javax.swing.JRadioButton rMode3;
    // End of variables declaration//GEN-END:variables

}
